<% if @event %>

    <div id="[<%= @event.midpoint.longtitude %>, <%= @event.midpoint.latitude %>]" class="event_detail_page m-1 mb-3 p-3 border-primary border rounded bg-dark">
        Project Description:
        <br><%= @event.remark %>
        <br>
        <br> Project Led by: <%= @event.user.username %>
        <br> Contact Email: <%= @event.user.email %>
        <br> <%= @event.invites.count %> Collaborators
        <br>
        <br> Meeting Details: 
            <% if @event.midpoint_id != 1 %>
                <br>Location Address
                <br><%= @event.midpoint.name %>
                <br><%= @event.midpoint.address %>
            <% else %>
                <span class="text-danger"> To be Determined </span>
            <% end %>
            <br>
        <br>Time: <%= @event.event_date.strftime("%d %b %Y, %A") %> <%= @event.event_time.strftime("%H:%M %p") %>
    </div>

    <div class="slidecontainer">
        <h4>Hotels In The Area</h4>
        <input type="range" min="1" max="25" value="2" class="slider" id="myRange">
        <p>Search <span id="dist"></span> km radius</p>
        <hr>
    </div>
      


<button type="button" class="back_btn btn btn-danger mr-2">Back</button>

<script>
    var slider = document.getElementById("myRange");
    var output = document.getElementById("dist");
    output.innerHTML = slider.value;

    var coordinates = [<%= @event.midpoint.longtitude.to_f %>, <%= @event.midpoint.latitude.to_f %>];

    map.addSource('meetpoint', {
        type: 'geojson',
        data: {
            "type": "FeatureCollection", "features": [{
                "type": "Feature",
                "revelance": 1,
                "properties": {
                    "description": "test",
                    "landmark": true,
                    "category": "building",
                },
                "center": coordinates,
                "geometry":{
                    "coordinates": coordinates,
                    "type": "Point"
                }
            }]
        }
    });

    map.addLayer({
        'id': 'meetpoint',
        'type': 'circle',
        'source': 'meetpoint',
        'layout': {
            'visibility': 'visible'
        },
        'paint': {
            'circle-radius': 20,
            'circle-color': 'rgba(255,250,205,1)'
        }
    })

    map.getSource('meetpoint')._data.features.forEach(function(marker) {
            //create a DOM element for the marker
            var el = document.createElement('div');
            el.className = 'marker';
            el.style.backgroundImage = 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/coderbot_head-336fa35287d0221cadcbf78a70390f3a9abada5d383781b1e05753bf70320c27.gif)';
            el.style.backgroundColor = "transparent";
            el.style.height = "50px";
            el.style.width = "50px";
            el.style.zIndex = "100";
            new mapboxgl.Marker(el).setLngLat(coordinates).addTo(map);
            map.flyTo({
                center: coordinates,
                zoom: 15,
            });
        });

    slider.oninput = function() {
        output.innerHTML = this.value;
        var dist = output.innerHTML

        if (map.getSource(`show_hotel`)) {
            map.removeLayer(`show_hotel`);
            map.removeSource(`show_hotel`);
        }

        $('.hotel_layer').remove();
        callMap(dist);
    }

    callMap(2);

    function callMap (dist) {
        $.ajax({
            url: "/show_map",
            method: "POST",
            data: {"event_id": <%= @event.id %>, "dist": dist },
            dataType: "JSON",
            success: function(response){
                map.addSource('show_hotel', {
                    type: 'geojson',
                    data: response[0]
                });

                map.addLayer({
                    'id': 'show_hotel',
                    'type': 'circle',
                    'source': 'show_hotel',
                    'layout': {
                        'visibility': 'visible'
                    },
                    'paint': {
                        'circle-radius': 18,
                        'circle-color': 'rgba(255,0,0,1)'
                    }
                })

                map.getSource('show_hotel')._data.features.forEach(function(marker) {
                    var el = document.createElement('div');
                    el.className = 'marker hotel_layer';
                    el.style.backgroundImage = 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/hotel_icon-fa5aa9fe3ae2a15f6465af79aa852e5db02d6aed3a2cbdc46bfeaee4dcf775a4.gif)';
                    el.style.height = '50px';
                    el.style.width = '50px';
                    new mapboxgl.Marker(el).setLngLat(marker.center).addTo(map);
                });
            }

        })
    }

    // pop up function
    
    var popup = new mapboxgl.Popup({
        closeButton: false,
        closeOnClick: false
    });

    map.on('mouseenter', 'show_hotel', function (e) {
        popup.remove();
        var coordinates = e.features[0].geometry.coordinates.slice();
        var description = e.features[0].properties.description;
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }
        popup.setLngLat(coordinates).setHTML(description).addTo(map);
    });
        
    map.on('click', function() {
        map.getCanvas().style.cursor = '';
        popup.remove();
    });

    map.on('click', 'show_hotel', function (e) {
        var start = e.features[0].properties.coordinates;
        var end = map.getSource('meetpoint')._data.features[0].center;
        getRoute2(start, end);
    })

//show routes' code -----------------------------------------------------
    var canvas = map.getCanvasContainer(); //map canvas

    function getRoute2(start, end){
        if (map.getSource(`route`)) {
            map.removeLayer(`route`);
            map.removeSource(`route`);
            $('.hotel_journey_detail').remove();
        }
        start = start.split(",");
        var url = 'https://api.mapbox.com/directions/v5/mapbox/driving/' + start[0].slice(2, -1) + ',' + start[1].slice(1, -2) + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=pk.eyJ1IjoibGVvbmZ1cnkiLCJhIjoiY2pyaDUxNDZnMDQ0bzQ1cWp0MjFqNDh5aSJ9.lXa113BsThiaf5YBcxwQFA';

        var req = new XMLHttpRequest();
        req.open('GET', url, true);
        req.send();
        req.responseType = 'json';
        req.onload = function() {
            var data = req.response.routes[0];
            var trip_duration = data.duration;
            var trip_distance = data.distance;
            var route = data.geometry.coordinates;
            var geojson = {
                type: 'Feature',
                properties: {},
                geometry: {
                    type: 'LineString',
                    coordinates: route
                }
            };
            //reset map using setData
            map.addLayer({
                id: 'route',
                type: 'line',
                source: {
                    type: 'geojson',
                    data: {
                        type: 'Feature',
                        properties: {},
                        geometry: {
                            type: 'LineString',
                            coordinates: geojson
                        }
                    }
                },
                layout: {
                    'line-join': 'round',
                    'line-cap': 'round'
                },
                paint: {
                    'line-color': '#3887be',
                    // 'line-color': 'black',
                    'line-width': 5,
                    'line-opacity': 0.75
                }
            });
            map.getSource('route').setData(geojson);   

            var coor = [`${start[0].slice(2, -1)}`, `${start[1].slice(1, -2)}`];
            console.log(coor);
            let new_p = document.createElement('p');

            var dist = parseFloat(trip_distance / 1000).toFixed(1);
            var text_class;
            if (dist > 100) { text_class = "text-danger"; }
            var jour_det = `Journey: <span class="journey_detail ${text_class}">${parseFloat(trip_duration / 60).toFixed(1)} minutes across <span class="journey_dist">${dist}</span> km </span>`;


            if (dist > 100) { text_class = "exceed_range"; }
            let el = document.createElement('div');
            el.className = `hotel_journey_detail map_journey_detail ${text_class}`;
            el.innerHTML = `<span class="">${parseFloat(trip_duration / 60).toFixed(1)} mins across <span class="journey_dist">${dist}</span> km </span>`;
            el.style.top = "30px";
            new mapboxgl.Marker(el).setLngLat(coor).addTo(map);
        }
    }
</script>

<% end %>