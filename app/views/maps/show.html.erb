<!-- mapbox search bar start -->
    <div class="search">
    <script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.0/mapbox-gl-geocoder.min.js'></script>
    <link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v3.1.0/mapbox-gl-geocoder.css' type='text/css' />
    </div>
<!-- mapbox search bar end -->

<div id='map' class="w-100" style='height: 100vh;'></div>
<nav id="menu"></nav>

<div id="sidebar_map" class="d-none">
    <div id="event_status" class="row p-0 m-2 justify-content-between">
        <p class="ml-1 mr-1 mt-1 text-white">My Events: <span id="user_event_count"><%= Event.where(user: current_user).count %></span> </p>
        <div class="ml-2 mr-2 "> 
            <button type="button" id="view_event_btn" class="btn btn-primary active">View Events</button>
        </div>
        <div class="ml-2 mr-2 "> 
            <button type="button" id="new_event_btn" class="btn btn-primary active">New Event</button>
        </div>
    </div>

    <div id="event_create" class="m-2 text-white d-none">
        <%= render partial: "events/new" %>
    </div>

    <div id="event_list" class="m-2 text-white d-none">
        <%= render partial: "events/list" %>
    </div>

    <div id="event_details" class="m-2 text-white d-none">
        <%= render partial: "events/detail" %>
    </div>
</div>

<div id='rubybot_container' class="d-none">
    <%= image_tag("coderbot_motion.gif", class: "rubybot") %>
</div>

<script>
// jquery script
var event_state = false;


$('#new_event_btn').on('click', () => {
    $('#event_status').addClass('d-none');
    $('#event_list').addClass('d-none');
    $('#event_create').removeClass('d-none');
    $('#event_details').addClass('d-none');
});

$('#view_event_btn').on('click', () => {
    $('#event_status').addClass('d-none');
    $('#event_list').removeClass('d-none');
    $('#event_create').addClass('d-none');
    $('#event_details').addClass('d-none');
});

$('.back_btn').on('click', () => { //sync detail
    $('#event_status').removeClass('d-none');
    $('#event_list').addClass('d-none');
    $('#event_create').addClass('d-none');
    $('#event_details').addClass('d-none');
});

$('#create_event_btn').on('click', () => {
    $('#user_event_count')[0].textContent = parseInt($('#user_event_count')[0].textContent) + 1
    $('#event_status').removeClass('d-none');
    $('#event_list').addClass('d-none');
    $('#event_create').addClass('d-none');
    $('#event_details').addClass('d-none');
});

$(document).on('turbolinks:load', function(){
//-----------------------------------------------------------------------------
// MAPBOX SCRIPT START
    let nos_routes = 0; //for clear_routes
    var center_calc = `${<%= @center %>}`;
    center_calc = center_calc.split(',');
    let center_cor = [parseFloat(center_calc[0]), parseFloat(center_calc[1])];
    mapboxgl.accessToken = 'pk.eyJ1IjoibGVvbmZ1cnkiLCJhIjoiY2pyaDUxNDZnMDQ0bzQ1cWp0MjFqNDh5aSJ9.lXa113BsThiaf5YBcxwQFA';
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        // center: center_cor, // kuala lumpur //to be dynamic
        center: [102.4459, 3.2647],
        zoom: 8,
        // zoom: center_calc[2],
        pitch: 45, //pitch adjusts view from above
        bearing: 0, //bearings adjust latitude baseline
    });
    map.on("load", () => {
        $.ajax({
            url: "/map",
            method: "POST",
            dataType: "JSON",
            success: function(response){
                map.addSource('Ruby', {
                    type: 'geojson',
                    data: response[0]
                }); 
                
                map.addLayer({
                    'id': 'Ruby',
                    'type': 'circle', //fill, line, symbol, circle, heatmap, fill-extrusion, raster, hillshade, background
                    'source': 'Ruby',
                    'layout': {
                    'visibility': 'visible'
                    },
                    'paint': {
                        'circle-radius': 18,
                        'circle-color': 'rgba(255,0,0,0)' // pin color
                    },
                }); 
                map.addSource('Python', {
                    type: 'geojson',
                    data: response[1]
                }); 
                
                map.addLayer({
                    'id': 'Python',
                    'type': 'circle', //fill, line, symbol, circle, heatmap, fill-extrusion, raster, hillshade, background
                    'source': 'Python',
                    'layout': {
                    'visibility': 'visible'
                    },
                    'paint': {
                        'circle-radius': 18,
                        'circle-color': 'rgba(0,255,0,0)' // pin color
                    },
                }); 
                map.addSource('Java-Script', {
                    type: 'geojson',
                    data: response[2]
                }); 
                
                map.addLayer({
                    'id': 'Java-Script',
                    'type': 'circle', //fill, line, symbol, circle, heatmap, fill-extrusion, raster, hillshade, background
                    'source': 'Java-Script',
                    'layout': {
                    'visibility': 'visible'
                    },
                    'paint': {
                        'circle-radius': 18,
                        'circle-color': 'rgba(0,0,255,0)' // pin color
                    },
                }); 
                map.addSource('HTML-CSS', {
                    type: 'geojson',
                    data: response[3]
                }); 
                
                map.addLayer({
                    'id': 'HTML-CSS',
                    'type': 'circle', //fill, line, symbol, circle, heatmap, fill-extrusion, raster, hillshade, background
                    'source': 'HTML-CSS',
                    'layout': {
                    'visibility': 'visible'
                    },
                    'paint': {
                        'circle-radius': 18,
                        'circle-color': 'rgba(100,100,100,0)' // pin color
                    },
                }); 
                //-----------------------------------------------------------------
                var layers = map.getStyle().layers;
                var labelLayerId;
                for (var i = 0; i < layers.length; i++) {
                    if (layers[i].type === 'symbol' && layers[i].layout['text-field']) {
                        labelLayerId = layers[i].id;
                        break;
                    }
                }
                map.addLayer({
                    'id': '3d-buildings',
                    'source': 'composite',
                    'source-layer': 'building',
                    'filter': ['==', 'extrude', 'true'],
                    'type': 'fill-extrusion',
                    'minzoom': 15,
                    'paint': {
                        'fill-extrusion-color': '#aaa',
                        // use an 'interpolate' expression to add a smooth transition effect to the
                        // buildings as the user zooms in
                        'fill-extrusion-height': [
                            "interpolate", ["linear"], ["zoom"],
                            15, 0,
                            15.05, ["get", "height"]
                        ],
                        'fill-extrusion-base': [
                            "interpolate", ["linear"], ["zoom"],
                            15, 0,
                            15.05, ["get", "min_height"]
                        ],
                        'fill-extrusion-opacity': .6
                    }
                }, labelLayerId);
                // add marker
                map.getSource('Ruby')._data.features.forEach(function(marker) { mapMarker(marker, 'Ruby', 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_ruby_static-4f5071d00e18eea02127144ab38149682be771ce27149d95d31049ca7dbd9874.png)',) });
                map.getSource('Python')._data.features.forEach(function(marker) { mapMarker(marker, 'Python', 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_python_static-4932cb2e4ac95fda030825e3aa75ca02249a7efdc9c669eb630bd889658bce80.png)',) });
                map.getSource('Java-Script')._data.features.forEach(function(marker) { mapMarker(marker, 'Java-Script', 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_js_static-72f3d4ea62d21ebde3b0b30858c55bc4b23c3040429bcfd996d9f9bddc21c10d.png)',) });
                map.getSource('HTML-CSS')._data.features.forEach(function(marker) { mapMarker(marker, 'HTML-CSS','url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_hypercss_static-7680c066eb225d23acdc13c7aa4646198a412f397c1d8fb220b79c282a397d08.png)',) });

                // toggle menu
                var toggleableLayerIds = [ 'Ruby', 'Python', 'JS', 'HTML-CSS' ];
                for (var i = 0; i < toggleableLayerIds.length; i++) {
                    var id = toggleableLayerIds[i];
                    var link = document.createElement('a');
                    link.href = '#';
                    link.className = 'active mr-2 ml-2 btn btn-primary';
                    link.textContent = id;

                    link.onclick = function (e) {
                        var clickedLayer = this.textContent;
                        if (this.textContent == "JS") {
                            clickedLayer = "Java-Script"
                        }
                        e.preventDefault();
                        e.stopPropagation();
                        var visibility = map.getLayoutProperty(clickedLayer, 'visibility');
                        if (visibility === 'visible') {
                            map.setLayoutProperty(clickedLayer, 'visibility', 'none');
                            $(`.${clickedLayer}`).addClass('d-none');
                            this.className = '.btn-sml mr-2 ml-2 btn btn-light';
                        } else {
                            this.className = 'active mr-2 ml-2 btn btn-primary';
                            $(`.${clickedLayer}`).removeClass('d-none');
                            map.setLayoutProperty(clickedLayer, 'visibility', 'visible');
                        }
                    };
                    var layers = document.getElementById('menu');
                    layers.appendChild(link);
                }

                // search bar
                map.addControl(new MapboxGeocoder({
                    accessToken: mapboxgl.accessToken
                }));
                
                $('#sidebar_map').removeClass('d-none');
                $('#rubybot_container').removeClass('d-none');
                

            //-----------------------------------------------------------------success call end
            },
            error: function(error){
                console.log(error);
            }
        });
    });
    //------------------ Display
    var popup = new mapboxgl.Popup({
        closeButton: false,
        closeOnClick: false
    });

    map.on('mouseenter', 'Ruby', function(e) {mapPopup(e)});
    map.on('mouseenter', 'Python', function(e) {mapPopup(e)});
    map.on('mouseenter', 'Java-Script', function(e) {mapPopup(e)});
    map.on('mouseenter', 'HTML-CSS', function(e) {mapPopup(e)});

    map.on('click', function() { //remove popup when click anywhere on the map
        map.getCanvas().style.cursor = '';
        popup.remove();
    });

    function mapMarker(marker, lang, marker_img) {
        let coord = marker.geometry.coordinates;
        let el = document.createElement('div');
        el.className = `marker ${lang} ${marker.properties.poi}`;
        el.style.backgroundImage = marker_img;
        new mapboxgl.Marker(el).setLngLat(coord).addTo(map);
    }

    function mapPopup(e) {
        // Change the cursor style as a UI indicator.
        map.getCanvas().style.cursor = 'pointer';
        var coordinates = e.features[0].geometry.coordinates.slice();
        var description = e.features[0].properties.description;
        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }
        // Populate the popup and set its coordinates
        // based on the feature found.
        popup.setLngLat(coordinates).setHTML(description).addTo(map);
        if (event_state == false) {
            $('.colab-btn').addClass('d-none');
        }
        else {
            $('.colab-btn').removeClass('d-none');
        }

        let query = $('#shortlist .user_id');
        let user_id = $('.user_id')[0].textContent;
        
        for (let i = 0; i < query.length; i++) {
            if (user_id == query[i].textContent) {
                $('.colab-btn').attr('disabled', 'disabled'); //change button state if user already selected
                $('.colab-btn').addClass('btn-danger').removeClass('btn-primary')
            }
        } 

        // map.getSource('Ruby')._data.features.forEach(function(marker)
        $('.colab-btn').on('click', () => {
            var poi = e.features[0].properties.poi;
            var user_lang = $('.user_lang')[0].textContent;
            var username = $('.username')[0].textContent;
            var lang;
            var url_pin;
            $('.colab-btn').attr('disabled', 'disabled');
            $('.colab-btn').addClass('btn-danger');
            switch (user_lang) {
                case " ruby ":
                    url_pin = "url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_ruby-2facb68414521576ff9345e34c248b2fab39888a157bdef5c36c97d5a78a3ccf.gif)";
                    lang = "Ruby";
                    break;
                case " python ":
                    url_pin = 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_python-4057585d43531c540df81a94c4c9baaa24f49f1c4723f4339fc2f2c3fa67c5d2.gif)';
                    lang = "Python";
                    break;
                case " javascript ":
                    url_pin = 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_js-59b89cbee8572126b342daa1409f49b396524ee80a1543166f1a1943787e194f.gif)';
                    lang = "Java-Script";
                    break;
                case " css ":
                    url_pin = 'url(https://next-academy-group-1-coder-bot.herokuapp.com/assets/pin_hypercss-8c6f2261d1e9eee252ab52e4d9c090aae0c7dc9ccc4924c13cf4fc811e1d6ba0.gif)';
                    lang = "CSS";
                    break;
            }
            
            var array = ['Specialist', 'Master', 'Intermediate', 'Novice']
            var title = lang + " " + array[Math.floor(Math.random() * array.length)];

            $('#colab_count')[0].textContent = parseInt($('#colab_count')[0].textContent) + 1;
            $(`.${poi}`)[0].style.backgroundImage = url_pin;
            var new_p = document.createElement('span');
            new_p.innerHTML = `<span class="user_id d-none">${user_id}</span> ${username}, ${title}<br>`;
            $('#shortlist').append(new_p);
            $('#meet_colab_btn').prop("disabled", false);
        })
    }
// MAPBOX SCRIPT END
//-------------------------------------------------------------------------------------

}) //turbolinks end
</script>